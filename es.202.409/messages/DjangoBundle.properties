django=Django
django-template=Django 템플릿

need-python-sdk=Django 프로젝트를 생성하려면 Python SDK가 필요합니다.
project-create-error=Django 프로젝트를 생성할 수 없습니다.
no-project-folder=생성 후 프로젝트 폴더가 없습니다.
create-folder-error=템플릿 폴더를 생성할 수 없습니다\: {0}
no-django=선택한 인터프리터에서 Django를 찾을 수 없습니다.

goto-template=템플릿으로 이동
goto-template-name={0} 템플릿으로 이동
goto-templates=템플릿으로 이동

project-name=프로젝트 이름(&P)\:
templates-folder=템플릿 폴더(&T)\:
templates-folders=템플릿 디렉토리\:
settings-module=설정\:
app-name=애플리케이션 이름(&A)\:
select-templates-folder-title=템플릿 폴더 선택
select-templates-folder-desc=템플릿 폴더 선택
select-root-folder-title=Django 루트 폴더 선택
select-root-folder-desc=Django 루트 폴더 선택

skip-template-create=템플릿 폴더가 지정되지 않았기 때문에 템플릿 생성을 건너뛰었습니다.
create-view=Django\: {0} 함수에 대한 뷰 생성
template-name-error=템플릿 이름이 문자, 숫자 및 밑줄로만 이루어져야 합니다.
view-function-exist=뷰 함수가 이미 존재합니다.
template-exist=템플릿이 이미 존재합니다\: {0}
empty-method-name=빈 메소드 이름
no-view=뷰 파일을 찾을 수 없습니다\: {0}

module=모듈\:
port=포트\:
select-module=모듈을 선택하십시오.
port-error=포트가 정수여야 합니다.
port-not-specified=포트가 지정되지 않았습니다.

# manage.py

manage.run.tab.name=Django\: manage.py
manage.run.error=manage.py을 시작할 수 없습니다.
manage.run.error.no-python=Python 인터프리터를 찾을 수 없습니다.

django.popup.prompt.text=<html><font size\="3">manage.py 작업 이름 입력</font><br/><font size\="2">Enter를 눌러 일반 실행하거나 Shift-Enter를 눌러 매개변수를 지정하십시오.</font></html>
django.popup.find.not.found=작업을 찾을 수 없습니다.

enter-name=이름(문자, 숫자 및 밑줄만 허용)을 입력하십시오\:
select-app=애플리케이션을 선택하십시오.
all-apps=[모든 애플리케이션]
no-apps=애플리케이션 없음

django.console=Django 콘솔
django.manage.py=Manage.py 작업
django.manage.py.env.settings=환경 변수\:

manage.task.desc.cleanup=데이터베이스의 이전 데이터(현재 만료된 세션만) 정리
manage.task.desc.compilemessages=내장 gettext 지원과 함께 사용하기 위해 .mo 파일에 .po 파일 컴파일
manage.task.desc.createcachetable=SQL 캐시 백엔드를 사용하는 데 필요한 테이블을 생성합니다.
manage.task.desc.createsuperuser=수퍼 사용자를 생성합니다.
manage.task.desc.diffsettings=현재 settings.py 및 디폴트 설정 간의 차이를 표시합니다.
manage.task.desc.dumpdata=데이터베이스 내용을 출력합니다.
manage.task.desc.flush=현재 데이터베이스에서 'sqlflush'를 실행합니다.
manage.task.desc.inspectdb=주어진 데이터베이스의 데이터베이스 테이블을 내부 검사하고 Django 모델 모듈을 출력합니다.
manage.task.desc.makemessages=Python 소스에서 메시지 파일로 모든 문자열을 추출합니다.
manage.task.desc.reset=현재 데이터베이스의 주어진 앱에 대해 'sqlreset'을 실행합니다.
manage.task.desc.shell=Python 대화형 인터프리터를 시작합니다.
manage.task.desc.sql=CREATE TABLE SQL 문을 출력합니다.
manage.task.desc.sqlall=CREATE TABLE, CREATE INDEX 및 사용자 지정 SQL 문을 출력합니다.
manage.task.desc.sqlclear=DROP TABLE SQL 문을 출력합니다.
manage.task.desc.sqlcustom=사용자 지정 수정 SQL 문을 출력합니다.
manage.task.desc.sqlflush=모든 테이블을 설치된 직후의 상태로 반환하는 데 필요한 SQL 문 목록을 반환합니다.
manage.task.desc.sqlindexes=CREATE INDEX SQL 문을 출력합니다.
manage.task.desc.sqlreset=DROP TABLE SQL을 출력한 다음 CREATE TABLE SQL을 출력합니다.
manage.task.desc.sqlsequencereset=시퀀스를 다시 설정하기 위해 SQL 문을 출력합니다.
manage.task.desc.startapp=프로젝트 디렉토리에서 Django 앱 디렉토리 구조 생성
manage.task.desc.syncdb=아직 생성되지 않은 데이터베이스 테이블을 생성합니다.
manage.task.desc.test=테스트 도구를 실행합니다.
manage.task.desc.validate=설치된 모든 모델의 유효성을 검사합니다.
manage.task.desc.dbshell=설정에 지정된 데이터베이스 엔진에 대한 명령줄 클라이언트를 실행합니다.
manage.task.desc.testserver=주어진 Fixture의 데이터를 사용하여 Django 개발 서버를 실행합니다.
manage.task.desc.loaddata=이름이 지정된 Fixture의 내용을 검색하고 데이터베이스에 로드합니다.
manage.task.desc.sqlinitialdata=
manage.task.desc.runserver=로컬 머신에서 경량 개발 웹 서버 시작



user-name=사용자 이름\:
password=비밀번호\:
email=이메일\:
create-superuser=수퍼 사용자 생성

inspection.close.tag.name=여는 태그와 닫는 태그가 상응하지 않습니다.
inspection.error.no-closing-tag=닫는 태그가 없는 여는 태그
inspection.error.no-opened-tag=여는 태그가 없는 닫는 태그
inspection.error.open-tag-without-closed=''{0}'' 여는 태그에 대한 닫는 태그 없음
inspection.error.middle-tag-without-opened=''{0}'' 여는 태그 없음
inspection.error.no-if-tag=if 태그가 없는 else 태그
inspection.error.no-for-tag=for 태그가 없는 빈 태그

inspection.unresolved-template-reference.display-name=해결되지 않은 템플릿 참조
inspection.unresolved-template-reference.error-msg=해결되지 않은 템플릿 참조 ''{0}''

inspection.unresolved-static-reference.display-name=해결되지 않은 정적 참조
inspection.unresolved-static-reference.error-msg=해결되지 않은 정적 참조 ''{0}''

inspection.unresolved-tag.display-name=해결되지 않은 태그
inspection.unresolved-tag.error-msg=해결되지 않은 태그 ''{0}''

inspection.unresolved-filter.display-name=해결되지 않은 필터
inspection.unresolved-filter.error-msg=해결되지 않은 필터 ''{0}''

inspection.unresolved-load.display-name=해결되지 않은 라이브러리 검사
inspection.unresolved-load.error-msg=해결되지 않은 라이브러리 ''{0}''

inspection.unresolved-name.error-msg=확인되지 않은 이름 ''{0}''

inspection.relation.display-name=Django 관계 검사
inspection.incompatible.display-name=Django 버전 호환성을 위한 템플릿 코드를 확인하는 Django 검사
inspection.incompatible.url_tag.error=Django 1.5 이후에서는 뷰 이름이 따옴표 안에 있어야 하며 1.5 이전에서는 따옴표가 없어야 합니다.
inspection.incompatible.fix.url_tag.add_quotes=URL 인수 주위에 따옴표 추가
inspection.incompatible.fix.url_tag.remove_quotes=URL 인수 주변의 따옴표 제거
inspection.incompatible.error=''{0}''을(를) ''{1}''에서만 사용할 수 있습니다.


inspection.url_tag_arguments.display-name=필요한 인수에 대한 {% url %} 태그을 확인하는 Django 검사
inspection.url_tag_arguments.args_mixed=위치 구문과 키워드 구문을 단일 호출에서 혼용하지 않습니다.
inspection.url_tag_arguments.redundant_argument=인수 ''{0}'' 이(가) URL 정규식에 존재하지 않습니다.
inspection.url_tag_arguments.missing_args=다음 인수가 없습니다\: ''{0}''
inspection.url_tag_arguments.named_arg_string=''{0}''
inspection.url_tag_arguments.pos_arg_string=인수 \# ''{0}''
inspection.url_tag_arguments.bad_regex=표현식 ''{0}'' 이(가) 패턴 ''{1}''와(과) 일치하지 않습니다.

inspection.unresolved_url.display-name=해결된 {% url %} 태그를 확인하는 Django 검사 
inspection.unresolved_url.error=url ''{0}''을(를) 해결하지 못했습니다. url이 urls.py, views.py 등에 있는지 확인하십시오. url이 해결될 때까지 인수 검사가 작동하지 않습니다.


inspection.django-orm-inspection.display-name=Django ORM 검사
# Some methods are disabled when M2M has intermediate table: https://docs.djangoproject.com/en/1.7/topics/db/models/#extra-fields-on-many-to-many-relationships
inspection.django-orm-inspection.disabled-m2m-interm=메소드 ''{0}'' 중간 모델을 사용 하는 경우 다대다 관계식에서 사용할 수 없습니다. 중간 모델 관리자를 호출하십시오.
# Some methods do not even exist if foreign key does not allow nulls: https://docs.djangoproject.com/en/1.7/ref/models/relations/#django.db.models.fields.related.RelatedManager.clear
# ... and https://docs.djangoproject.com/en/1.7/ref/models/relations/#django.db.models.fields.related.RelatedManager.remove
inspection.django-orm-inspection.non-existence-due-to-foreign-key-not-null-method=외래 키가 null을 허용하지 않는 경우 메소드 ''{0}'' 이(가) 관리자에 존재하지 않습니다. 외래 키 생성자에 null\=true를 추가하십시오.

# DuplicatedBlockNamesInspection
INSP.NAME.duplicated.block.names=블록 이름 중복
INSP.NAME.name.$0.is.duplicated=블록 이름 ''{0}'' 이(가) 중복되었습니다.

broken.line.comment.inspection.name=끊어진 줄 주석

# ExtendsTagPositionInspection
INSP.NAME.extends.tag.position=잘못 배치된 {% extends %} 태그

inspection.end-block-name.display-name=Django 엔드블록 이름이 검사와 일치하지 않습니다.

create-view-quick-fix-name=Django 뷰 메소드 생성

django-create-template=템플릿 생성
django-create-view-method=뷰 메소드 생성
create-template=템플릿 생성
name=템플릿 이름\:
folder=템플릿 폴더\:

select-template-folder=템플릿 폴더 선택

select-template-folder-text=템플릿 파일에 대한 루트 디렉토리를 선택하십시오.

django.facet.wizard.error.no.skd=Django 패싯은 Python SDK가 필요합니다.
django.facet.wizard.error.skd.without.django=Django 패키지가 있는 Python SDK를 선택하십시오.
django.facet.wizard.error.bad.project.name=프로젝트 이름에 문자, 숫자 및 밑줄만 포함되어야 합니다.
django.facet.wizard.error.bad.app.name=앱 이름에 문자, 숫자 및 밑줄만 포함되어야 합니다.
django.facet.wizard.error.project.equals.app.name=앱을 프로젝트와 동일하게 호출할 수 없습니다.
django-root-folder=Django 프로젝트 루트\:

django.action.rerun=다시 실행
manage-script=스크립트 관리\:
template.path=템플릿 경로\:
templates.root=템플릿 루트\:

django.block.is.overridden=상속자에서 재정의됩니다.
django.block.inheritors.navigation.title=<html><body><b>{0}</b>상속자 선택 ({1} 템플릿을 찾았습니다)</body></html>
django.block.inheritors.navigation.findUsage.title={0}의 상속자
# Magic literal "url name" like {% url "here" %}
magic_literals.django_url_name=Django URL
# Magic literal django context param" like {{ here }}
magic_literals.django_template_context_param=Django 템플릿 컨텍스트 매개변수
template.language=템플릿 언어\:

# Django console name
django.manage.name=manage.py@{0}
# Show user progress bar while python fetches commands
django.manage.real_commands.modal_title=Django 명령 가져오는 중...
# Python process died fetching commands
django.manage.real_commands.fail.died=모듈 "{0}"에서 실제 명령을 가져오지 못했습니다\: Python 프로세스가 코드 {1}\: {2}(으)로 죽었습니다.
# Error to show to user when reason is unknown
django.manage.real_commands.fail.unknown_reason=알 수 없는 원인
# Process failed to execute and fetch commands
django.manage.real_commands.fail.cant_execute=모듈 {0}에서 프로세스를 실행하지 못했습니다\: {1}
# Tab with to display such errors
django.manage.real_commands.fail.error_title=Django 오류
# What to tell user when "manage shell" is called
django.manage.open_console=별도 창에서 셸 실행 중...
# Text to display when several modules exist, and user should choose one to run manage.py on
django.manage.several_modules=manage.py를 실행할 모듈을 선택하십시오.
# To be reported when helper XML output is badly formatted
django.manage.bad_commands_out=잘못된 출력으로 인해 실제 명령을 가져오는 중 오류가 발생했습니다. 자세한 내용은 로그를 확인하십시오.
# Message to be shown when timeout elapsed waiting for manage.py commands
django.manage.timeout=Python 명령 목록 생성 시간 제한({0} sec) 대기

settings.file-tracking.comment=여러 이름을 콜론으로 구분합니다. Glob 스타일의 와일드카드가 지원됩니다.
settings.no.value.validation.error.message={0} 을(를) 지정하십시오.
settings.no.value.for.name.validation.error.message={1}에 대한 {0} 을(를) 찾을 수 없습니다.
settings.no.manage.value.validation.error.message={0} 을(를) 지정하십시오.
settings.project.root.validation.error.message=Django 프로젝트 루트 디렉토리를 지정하십시오.
settings.no.project.root.dir.validation.error.message=지정된 Django 프로젝트 루트 디렉토리가 존재하지 않습니다.
settings.project.root.dir.validation.error.message=Django 프로젝트 루트가 디렉토리여야 합니다.
configurable.DjangoFacetTab.display.name=Django
configurable.DjangoFacet.display.name=Django

# Templates
django.templates.with.name.exists=템플릿 {0} 이(가) 이미 존재합니다.
django.templates.root.selection.invalid=템플릿 루트 선택이 유효하지 않습니다.
django.templates.root.folder.missing=템플릿 루트 폴더가 존재하지 않습니다.
django.templates.root.not.specified=템플릿 루트가 지정되지 않았습니다.
django.templates.name.not.valid=템플릿 이름이 유효하지 않습니다.
django.templates.create.capitalized=탬플릿 만들기
django.templates.create.no.capitalization=템플릿 생성
django.create.template.with.name=템플릿 {0} 생성
django.template.colours.display.name=Django/Jinja2 템플릿
django.template.colours.filter=필터
django.template.colours.identifier=식별자
django.template.colours.number=숫자
django.template.colours.comment=주석
django.template.colours.tag.name=태그 이름
django.template.colours.tag=꼬리표
django.template.colours.string=문자열
django.template.colours.keyword=키워드
django.template.context.type.name=Django 템플릿
django.template.factory.error.missing.dir.title=디렉토리 {0} 이(가) 존재하지 않습니다.
django.template.factory.error.missing.dir.message=디렉토리 ''{0}'' 이(가) ''{1}''에 존재하지 않습니다. 생성하시겠습니까?
django.templates.checkbox.create=템플릿 생성

django.facet.name=Django
django.reference.cant.resolve=\ ''{0}''을(를) 해결할 수 없습니다.
django.reference.cant.resolve.function=함수 ''{0}''을(를) 해결할 수 없습니다.
django.reference.cant.resolve.class=클래스 ''{0}''을(를) 확인할 수 없습니다.
django.reference.cant.resolve.class.or.function=클래스 또는 함수 ''{0}''을(를) 해결할 수 없습니다.
django.cant.patch.created.project=생성된 프로젝트를 패치할 수 없습니다.
django.remote.project.not.synchronized=원격 프로젝트가 로컬 버전과 동기화되지 않았습니다. PyCharm이 설정에 따라 프로젝트를 패치할 수 없습니다. 원격 사이트에서 프로젝트를 계속 사용할 수 있습니다. 이 경우 수동으로 다운로드해야합니다.
django.server.display.name=Django 서버
django.server.config.description=Django 서버
django.select.manage.script=Django 관리 스크립트 선택
django.select.settings.file=Django 설정 파일 선택
django.run.browser.setting=브라우저 실행\:
django.start.js.debugger.automatically=디버깅 시 자바 JavaScript 디버거 자동 시작
django.enable.admin=Django 관리자 활성화(&E)
django.server.run.config.additional.options=추가 옵션\:
django.server.run.config.host=호스트\:
django.server.run.config.custom.command=사용자 지정 실행 명령\:
django.server.run.config.no.reload=다시 로드 없음
django.server.run.config.test.server=테스트 서버
django.settings.dont.use.testrunner=Django 테스트 러너 사용 안 함\:
django.settings.folder.pattern=파일을 추적하는 폴더 패턴\:
django.settings.show.structure=구조 표시
django.settings.completion.tail.text=구성 상수

django.exception.breakpoint=Django 예외 중단점
django.line.breakpoint=Django 줄 중단점

django.tests.config.select.settings.file=Django 설정 파일 선택
django.tests.config.custom.settings=사용자 지정 설정\:
django.tests.config.options=옵션\:
django.tests.config.target=대상\:
enable.django.support.checkbox.text=Django 지원 활성화

# Add load tag quick-fix
django.add.load.tag.family.name=로드 태그 추가
django.add.load.tag.suggestion.single.result={0}에서 로드
django.add.load.tag.suggestion.several.results=다음에서 로드 ...

django.parse.error.block.identifier.expected=블록 식별자 기대
django.parse.error.identifier.expected.after=. 이후 식별자 기대
django.parse.error.in.expected='in' 기대
django.parse.error.member.expression.expected=멤버 표현식 예상
django.parse.error.percent.brace.expected=%} 예상
django.parse.error.identifier.expected.before.from.keyword=from 키워드 이전 식별자 기대
django.parse.error.id.or.literal.expected=ID 또는 리터럴 기대
django.parse.error.unknown.subtag.for.blocktrans.found.with.count.or.and.expected=blocktrans에 대한 알 수 없는 하위 태그가 있습니다. 'with', 'count' 또는 'and'가 기대됩니다.
django.parse.error.equals.or.as.expected='\=' 또는 'as' 기대
django.parse.error.as.expected='as' 기대
django.parse.error.id.expected=ID 기대
django.parse.error.trimmed.argument.duplicated=중복 'trimmed' 인수
django.parse.error.trimmed.should.be.the.first.argument.of.tag='trimmed'가 태그의 첫 번째 인수여야 합니다.
django.parse.error.id.lowercase.expected=id 기대
django.parse.error.as.var.should.be.the.first.argument.of.tag='asVar'이 태그의 첫 번째 인수여야 합니다.
django.creating.django.facet=Django 패싯 생성
django.create.django.application=Django 애플리케이션 생성
django.error.creating.django.application.0=Django 애플리케이션 생성 오류\: {0}
django.parse.error.name.expected=이름 기대
django.parse.error.as.keyword.expected='as' 키워드 기대
django.parse.error.by.keyword.expected='by' 키워드 기대
django.parse.error.as.or.equals.expected='as' 또는 '\=' 기대
django.parse.error.value.expected=값 기대
django.parse.error.identifier.expected=식별자 기대
django.parse.error.parameter.assignment.expected=매개변수 할당 기대
django.parse.error.named.expression.expected=이름이 지정된 표현식 기대
django.parse.error.whitespace.expected=공백이 필요합니다
django.parse.error.wrong.identifier=잘못된 식별자
django.parse.error.whitespace.expected.before.a.string=문자열 앞에 공백이 필요합니다
django.parse.error.named.expression=이름이 지정된 표현식
django.parse.error.silent.keyword.expected='silent' 키워드 기대
django.parse.error.member.literal.expected=멤버 리터럴 기대
django.create.view.quickfix=뷰 메소드 생성
action.Django.RunManageTaskAction.text=manage.py 작업 실행...
action.Django.RunManageTaskAction.description=manage.py 작업 실행