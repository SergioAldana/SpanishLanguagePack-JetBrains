#module type
module.title=IntelliJ 플랫폼 플러그인
module.description=플러그인 모듈이 <b>IntelliJ 플랫폼</b> 기반 IDE 플러그인 개발에 사용됩니다.<br>이 모듈은 <b>IntelliJ 플랫폼 플러그인 SDK</b> 및 IDE 내 플러그인 실행 및 디버그를 위한 <b>실행 구성</b>을 제공합니다.
plugin.descriptor=IntelliJ 플랫폼 플러그인 설명자

group.PluginDeployActions.text=플러그인 배포 액션

#Module Editor - Deployment
deployment.title=플러그인 배포
deployment.cleanup={0} 디렉토리 정리
deployment.directory.location={0} 디렉토리 위치 선택
deployment.view.select={0} 선택
manifest.settings=매니페스트 설정
manifest.selection=선택한 {0} 이(가) 결과 배포에 포함됩니다
manifest.use.user.defined=사용자 매니페스트 사용\:
deployment.view.delete={0} 삭제?
deployment.view.meta-inf.label={0} 경로
suggest.to.delete=''{0}'' 을(를) 삭제하시겠습니까?
vm.parameters=VM 옵션(&V)
program.parameters=프로그램 인수(&P)

#Prepare for deployment action
action.MakeJarAction.text=배포 준비
action.MakeAllJarsAction.text=배포할 모든 플러그인 준비
select.plugin.modules.title=모듈 선택
select.plugin.modules.description=배포 준비할 모듈 선택
prepare.for.deployment.common=배포 준비
prepare.for.deployment=배포할 플러그인 모듈 ''{0}'' 준비
prepare.for.deployment.all=배포할 모든 플러그인 모듈 준비
saved.message.common=선택한 디렉토리에서 {0} 이(가) 저장됩니다
saved.message= 모듈 ''{1}'' 의 {0, choice, 1\#Zip|2\#JAR} 파일이 {2} 에 저장되었습니다
success.deployment.message=플러그인 모듈 ''{0}'' 배포 준비 완료
success.deployment.message.all=모든 플러그인 배포 준비 완료

##Idea Sdk
sdk.title=IntelliJ 플랫폼 플러그인 SDK
jdk.specification=JDK를 구성해주십시오
sandbox.specification=샌드박스를 구성해주십시오
sandbox.home=샌드박스 홈
sandbox.home.label=샌드박스 홈\:
sandbox.no.configured=IntelliJ 플랫폼 플러그인 SDK에 지정된 샌드박스 없음
sandbox.purpose=대상 IDE 설정, 시스템, 플러그인을 저장할 폴더 찾아보기

#errors
error.occurred=오류 발생
sdk.no.specified=플러그인 모듈 ''{0}'' 에 지정된 SDK 없음
sdk.type.incorrect=플러그인 모듈 ''{0}'' 의 SDK 유형이 잘못되었습니다.
sdk.type.incorrect.common=플러그인 모듈의 잘못된 SDK 유형
error.file.not.found=파일을 찾을 수 없음
error.file.not.found.message=파일 ''{0}''을(를) 찾을 수 없습니다.
error.no.plugin.xml=plugin.xml 파일을 찾을 수 없음
error.plugin.xml.readonly=읽기 전용 plugin.xml 파일을 처리할 수 없습니다\: {0}
error.plugin.xml.tag.invalid=<Invalid>
error.cannot.process.plugin.xml=플러그인 설명자 파일을 처리할 수 없음\: {0}
error.cannot.create.service.class=서비스 클래스를 생성할 수 없음

#run configurations
run.configuration.no.module.specified=설정을 위해 지정된 플러그인 모듈 없음
run.configuration.title=플러그인
run.configuration.type.description=플러그인 샌드박스 환경

#Test Data
testdata.create.dialog.title=Testdata 파일 생성
testdata.file.doesn.not.exist=<html>참조된 testdata 파일 {0} 이(가) 존재하지 않습니다. 해당 파일을 생성하시겠습니까?</html>
testdata.create.missing.files=누락된 파일 생성
testdata.confirm.create.missing.files.dialog.message=다음 testdata 파일을 생성합니다\:\n{0}
testdata.searching=Testdata 파일 검색

#Misc
info.message=정보(I)
new.action.id=액션 ID(&A)\:
new.action.description=설명(&D)\:
new.action.class.name=클래스 이름(&C)\:
new.action.text=이름(&N)\:
new.action.add.to.group=그룹에 추가
new.action.group.actions=액션(&I)\:
new.action.group.anchor=앵커\:
new.action.group.anchor.first=첫 번째(&F)
new.action.group.anchor.=마지막(&L)
new.action.group.anchor.before=이전(&B)
new.action.group.anchor.after=이후(&T)
new.action.group.groups=그룹(&G)\:
new.action.keyboard.shortcuts=키보드 단축키
new.action.keyboard.first=첫 번째\:
new.action.keyboard.second=두 번째\:
new.action.keyboard.clear=X
new.action.keyboard.clear.tooltip=단축키 클리어
new.action.invalid.id=액션 ID이 비어 있으면 안 됩니다
new.action.invalid.class.name=액션 클래스 이름이 유효한 Java 정규화된 이름이 아닙니다
new.action.invalid.name=액션 이름이 비어 있으면 안 됩니다
new.action.cannot.create.class=액션 클래스를 생성할 수 없음

command.implement.externalizable=Externalizable 구현

new.menu.action.text=조치
new.menu.action.description=새 액션 생성
new.action.error=액션을 생성할 수 없음
new.action.action.name=새 액션 생성 중\: {0}.{1}
new.action.dialog.title=새 액션

action.name.create.new.message.bundle=새 메시지 번들 ''{0}'' 생성
error.title.cannot.create.new.message.bundle=새 메시지 번들을 생성할 수 없음
action.DevKit.NewMessageBundle.text=메시지 번들
action.DevKit.NewMessageBundle.description=새 메시지 번들 클래스 및 해당 프로퍼티 파일 생성
title.create.new.message.bundle=새 메시지 번들 생성
label.bundle.name=번들 이름\:
error.message.do.not.put.bundle.to.impl.module=현재 .impl 모듈에 별도 번들을 생성하는 것을 권장하지 않으므로, 대신 해당 API 모듈의 번들을 사용하십시오

new.theme.dialog.title=새 테마 생성
new.theme.dialog.name.text.field.text=이름\:
new.theme.dialog.is.dark.checkbox.text=어두운색 테마
new.theme.dialog.name.empty=테마 이름이 비어 있으면 안 됩니다

theme.choose.color.dialog.title=색상 선택

new.menu.application.component.text=애플리케이션 구성요소
new.menu.module.component.text=모듈 구성요소
new.menu.project.component.text=프로젝트 구성요소

new.service.class.action.name=새 서비스 생성
new.service.dialog.interface=서비스 인터페이스(&I)\:
new.service.dialog.implementation=서비스 구현(&M)\:
new.service.dialog.class=서비스 클래스(&C)\:
new.service.dialog.separate=구현에서 인터페이스 분리(&S)
new.service.dialog.invalid.name=서비스 이름이 유효한 Java 정규화된 이름이 아닙니다
new.service.dialog.invalid.interface=서비스 인터페이스가 유효한 Java 정규화된 이름이 아닙니다
new.service.dialog.invalid.implementation=서비스 구현이 유효한 Java 정규화된 이름이 아닙니다

new.application.service.dialog.title=새 애플리케이션 서비스
new.project.service.dialog.title=프로젝트 서비스 생성
new.module.service.dialog.title=새 모듈 서비스 생성

select.plugin.module.to.patch=패치할 플러그인 모듈 선택

keyword.extend=\ 확장
keyword.implement=구현
class.action=액션
class.interface=인터페이스
class.implementation=구현

structure.sort.alphabetically.in.groups=그룹 내 알파벳순 정렬

inspections.group.name=플러그인 DevKit
inspections.group.descriptor=플러그인 설명자
inspections.group.description.file=설명 파일
inspections.group.code=코드
inspections.plugin.xml.inner.class.must.be.separated.with.dollar=내부 클래스가 '$'로 구분되어야 합니다
inspections.plugin.xml.plugin.should.have.jetbrains.vendor=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 'JetBrains'을 벤더로 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.vendor.no.url=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 ''{0}'' 을(를) url로 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.vendor.no.email=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 이메일을 지정할 수 없습니다
inspections.plugin.xml.plugin.jetbrains.no.version=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 버전을 지정할 수 없습니다
inspections.plugin.xml.plugin.jetbrains.no.idea.version=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 빌드 스크립트에 의해 자동으로 생성되기 때문에 idea-version을 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.no.change.notes=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 change-notes를 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.no.generic.plugin.url=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 제네릭 플러그인 url을 지정해야 합니다
inspections.plugin.xml.ep.qualifiedName.superfluous=불필요한 'qualifiedName'를 통한 선언
inspections.plugin.xml.ep.qualifiedName.superfluous.fix='name'을 통해 선언
inspections.plugin.xml.ep.doesnt.have.with=<extensionPoint>에 클래스 필드 유형을 지정하는 <with> 태그가 없습니다
inspections.plugin.xml.ep.both.beanClass.and.interface=<extensionPoint>가 'interface' 및 'beanClass' 속성을 둘 다 지정할 수 없습니다
inspections.plugin.xml.ep.missing.beanClass.and.interface=<extensionPoint>가 'interface' 및 'beanClass' 속성 중 하나를 지정해야 합니다
inspections.plugin.xml.ep.both.name.and.qualifiedName=<extensionPoint>가 'name' 및 'qualifiedName' 속성을 둘 다 지정할 수 없습니다
inspections.plugin.xml.ep.missing.name.and.qualifiedName=<extensionPoint>가 'name' 및 'qualifiedName' 속성 중 하나를 지정해야 합니다
inspections.plugin.xml.use.defaultExtensionNs=대신 defaultExtensionNs 사용
inspections.plugin.xml.specify.defaultExtensionNs.explicitly=명시적으로 defaultExtensionNs\="{0}" 지정
inspections.plugin.xml.invalid.build.number=<html>유효하지 않은 빌드 번호 ''{0}'' (<a href\="http\://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html">문서</a>)</html>
inspections.plugin.xml.until.build.use.asterisk.instead.of.big.number=''until-build''에서 ''{0}'' 사용 안 함,  대신 ''*'' 사용
inspections.plugin.xml.until.build.misleading.plain.number=''until-build'' 속성의 일반 숫자는 오해의 소지가 있습니다. ''{0}'' 은(는) ''{0}.0''과 동일하기 때문에 플러그인이 {0}.* builds와 호환되지 않습니다. 대신 ''{1}'' 을(를) 지정하는 것이 낫습니다.
inspections.plugin.xml.until.build.must.be.greater.than.since.build="until-build"이 "since-build"보다 커야 합니다
inspections.plugin.xml.dependency.superfluous.optional=불필요한 선언
inspections.plugin.xml.dependency.specify.config.file='config-file'을 지정해야 함
inspections.plugin.xml.deprecated.ep=더 이상 사용되지 않는 EP ''{0}''
inspections.plugin.xml.no.need.to.specify.itnReporter=JetBrains에서 개발한 플러그인의 예외는 ITNReporter 통해 자동으로 보고되므로 명시적으로 지정할 필요가 없습니다
inspections.plugin.xml.third.party.plugins.must.not.use.itnReporter='com.intellij.diagnostic.ITNReporter'는 JetBrains의 내부 처리 오류를 보고하므로 제3자 플러그인에서 사용될 수 없습니다
inspections.plugin.xml.deprecated.attribute=더 이상 사용되지 않는 속성 ''{0}''
inspections.plugin.xml.deprecated.helpset=Helpset이 더 이상 사용되지 않으므로 대신 'com.intellij.openapi.help.WebHelpProvider'를 사용하십시오
inspections.plugin.xml.attribute.not.used.anymore=속성 ''{0}'' 이(가) 더 이상 사용되지 않음
inspections.plugin.xml.anchor.must.have.relative-to-action='anchor'는 'relative-to-action'로 지정되어야 합니다
inspections.plugin.xml.must.use.after.before.with.relative-to-action=''relative-to-action''와 함께 ''{0}''|''{1}'' 을(를) 사용해야 함
inspections.plugin.xml.skipForDefaultProject.deprecated='skipForDefaultProject'은 더 이상 사용되지 않습니다. 디폴트로 프로젝트 구성 요소가 기본 프로젝트에서 로드되지 않습니다
inspections.plugin.xml.invalid.ep.name.description=유효하지 않은 EP {0} ''{1}'', 라틸 문자, 숫자, 마침표만 포함해야 함, 마침표로 시작하거나 끝날 수 없음, 각 조각은 소문자로 시작해야 함, 마지막 조각 단어는 이전 조각을 반복할 수 없음
inspections.plugin.xml.invalid.ep.name=이름
inspections.plugin.xml.invalid.ep.qualifiedName=정규화된 이름
inspections.plugin.xml.ignore.classes.title=등록 검사 무시 클래스 목록\:
inspections.plugin.xml.add.ignored.class.title=무시할 클래스 지정
inspections.plugin.xml.plugin.modules.label=멀티 모듈 플러그인 모듈\:
inspections.plugin.xml.plugin.modules.description=각 줄이 단일 플러그인에 포함된 쉼표로 구분된 모듈 이름 목록을 지정합니다.
inspections.plugin.xml.version.must.be.specified=<version>이 지정되어야 합니다
inspections.plugin.xml.vendor.must.be.specified=<vendor>이 지정되어야 합니다
inspections.plugin.xml.do.not.use.template.text=템플릿 텍스트 ''{0}'' 사용 안 함
inspections.plugin.xml.must.not.contain.template.text=템플릿 텍스트 ''{0}'' 을(를) 포함할 수 없음
inspections.plugin.xml.value.exceeds.max.length=값의 길이가 최대값 {0} 을(를) 초과합니다
inspections.plugin.xml.value.must.have.minimum.length=값은 최소 {0} 자리여야 합니다
inspections.plugin.xml.product.descriptor.invalid.date=날짜는 YYYYMMDD 숫자이거나 자리표시자(예\: __DATE__)여야 합니다
inspections.plugin.xml.product.descriptor.invalid.version=버전은 숫자이거나 자리표시자(예\: __VERSION__)여야 합니다
inspections.plugin.xml.no.plugin.icon.svg.file=<html>플러그인이 ''{0}'' 을(를) 제공해야 합니다 (<a href\="https\://www.jetbrains.org/intellij/sdk/docs/basics/plugin_structure/plugin_icon_file.html">문서</a>)</html>
inspections.plugin.xml.component.interface.class.redundant=불필요한 태그 'interfaceClass'
inspections.plugin.xml.service.interface.class.redundant=불필요한 속성 'serviceInterface'
inspections.plugin.xml.duplicated.dependency=종속성 구성 파일 ''{0}'' 중복

inspections.registration.problems.name=구성 요소 유형 불일치
inspections.registration.problems.option.check.plugin.xml=플러그인 설명자(plugin.xml) 검사
inspections.registration.problems.option.check.java.actions=Java 액션 검사
inspections.registration.problems.option.check.java.code=자바 코드 검사
inspections.registration.problems.quickfix.read-only=클래스 ''{0}'' 이(가) 읽기 전용입니다
inspections.registration.problems.quickfix.create.constructor=인수 없는 생성자 생성

inspections.registration.problems.incompatible.message=plugin.xml의 클래스 등록에 따르면 클래스는 ''{1}'' 을(를)  {0}해야 합니다
inspections.registration.problems.abstract=플러그인 구성 요소 클래스가 abstract여야 합니다
inspections.registration.problems.missing.noarg.ctor=액션 클래스에는 인수 없는 생성자가 있어야 합니다

inspections.registration.problems.missing.implementation.class=누락된 구현 클래스
inspections.registration.problems.cannot.resolve.class={0} 클래스를 해결할 수 없음
inspections.registration.problems.component.incompatible.interface=구성 요소 클래스를 인터페이스 클래스 ''{0}'' 에 할당할 수 없습니다
inspections.registration.problems.component.duplicate.interface=동일한 인터페이스 클래스를 가진 여러 구성 요소는 허용되지 않습니다
inspections.registration.problems.action.incompatible.class=액션 클래스는 ''{0}'' 을(를) 확장해야 합니다

inspections.component.not.registered.name=구성 요소/액션이 등록되지 않음
inspections.component.not.registered.message={0} 이(가) plugin.xml에 등록되지 않았습니다
inspections.component.not.registered.option.check.actions=액션 검사
inspections.component.not.registered.option.ignore.non.public=비 public 클래스 무시
inspections.component.not.registered.quickfix.family={0} 등록
inspections.component.not.registered.quickfix.name={0} 등록
inspections.component.not.registered.quickfix.error={0} 을(를) 등록할 수 없음

inspections.component.postfix.template.not.found.description.name=접미사 템플릿 설명 검사기

inspections.presentation.cannot.resolve.icon=아이콘 ''{0}'' 을(를) 해결할 수 없음
inspections.plugin.xml.invalid.order.attribute=유효하지 않은 'order' 속성 값
invalid.order.attribute.part=유효하지 않은 ''order'' 속성 값 부분\: ''{0}'', ''first'', ''last'', ''before <id>'' 또는 ''after <id>''여야 함

inspections.unregistered.named.color=<html>이름 지정된 색상 키 ''{0}'' 이(가) <code>*.themeMetadata.json</code>에 등록되지 않았습니다 (<a href\="https\://www.jetbrains.org/intellij/sdk/docs/reference_guide/ui_themes/themes_metadata.html">문서</a>)</html>

ant.build.jar.comment=플러그인 ''{0}'' 아카이브 빌드
ant.build.jar.description=모듈 ''{0}'' 플러그인 아카이브 빌드
no.java.sdk.for.idea.sdk.found=적절한 버전의 Java SDK를 찾을 수 없습니다. IntelliJ 플랫폼 플러그인 플러그인 SDK와 더불어 동일한 Java 버전({0})의 JDK를 정의해야 합니다.
no.idea.sdk.version.found=IntelliJ 플랫폼 플러그인 SDK에 필요한 JDK 버전을 탐지하지 못했습니다.
error.cannot.resolve.plugin=플러그인 {0} 을(를) 확인할 수 없습니다
create.description.file=설명 파일 {0} 생성
create.description.file.family.name=설명 파일 생성
select.target.location.of.description={0} 대상 위치 선택
implemented.at.runtime.dom=런타임 시 구현된 DOM 요소
implemented.at.runtime.jamElement=런타임 시 구현된 JAM 요소

line.marker.tooltip.extension.declaration={3} 내 <a href\="\#navigation/{0}\:{1}">{2}</a> 선언
line.marker.tooltip.extension.point.declaration={3} 내 <a href\="\#navigation/{0}\:{1}">{2}</a> EP 선언
inspections.usage.uelement.as.psi=UElement을 PsiElement로 사용하는 것을 권장하지 않습니다.

inspections.missing.recent.api.common.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다.
inspections.missing.recent.api.class.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 이 유형은 이전 IDE에서 다른 정규화된 이름을 가졌을 수도 있습니다.
inspections.missing.recent.api.method.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 이 메소드는 이전 IDE에서 다른 시그니처를 가졌을 수도 있습니다.
inspections.missing.recent.api.field.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 이 필드는 이전 IDE에서 다른 시그니처를 가졌을 수도 있습니다.
inspections.missing.recent.api.default.constructor.message=''{0}'' 기본 생성자는 {1} 이후부터 이용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다.
inspections.missing.recent.api.overriding=''{0}'' 내 메소드 재정의는 {1} 이후부터 이용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 재정의된 메소드는 이전 IDE에서 다른 시그니처를 가졌을 수도 있습니다.

inspection.renamer.dialog.title=검사 설명 파일 이름 변경 및 짧은 이름 변경
inspection.renamer.option.name=검사 설명 파일 이름 변경 및 짧은 이름 변경
inspection.renamer.dialog.description=<html>검사 설명 파일 이름 및 짧은 이름을 변경하시겠습니까?<br/><b>경고\: 기존 검사 프로파일 및 억제 주석이 중단될 수 있습니다.</b></html>
inspection.renamer.entity.name=요소

intellij.api.annotations.update.title=IntelliJ API 어노테이션 {0} 업데이트
intellij.api.annotations.update.confirmation.content=<html>{0} 의 API 사용을 검증하는 검사를 실행하려면 외부 어노테이션을 업데이트해야 하며, 이는 Maven 저장소에서 다운로드할 수 있습니다. <br><br>플러그인 개발 도중 추가 IDE 지원을 받기 위해 이 어노테이션을 업데이트하시겠습니까?</html>
intellij.api.annotations.update.confirmation.update.button=업데이트
intellij.api.annotations.update.confirmation.disable.inspection.button=검사 비활성화
intellij.api.annotations.update.successfully.updated={0} IntelliJ API 외부 어노테이션이 성공적으로 업데이트되었습니다.
intellij.api.annotations.update.successfully.updated.but.not.latest.version={0} IntelliJ API 외부 어노테이션이 버전 {1} (으)로 업데이트되었으며, Maven 저장소에서 다운로드 가능한 최신 버전입니다. {0} 어노테이션이 아직 공개되지 않았을 수 있습니다. 다음에 다시 업데이트하시길 바랍니다.
intellij.api.annotations.update.failed=IntelliJ API 외부 어노테이션을 업데이트하지 못했습니다\: {0}
intellij.api.annotations.update.failed.no.annotations.found=Maven 저장소에서 {0}에 대한 외부 어노테이션을 찾을 수 없습니다.

inspections.plugin.xml.i18n.name=i18n text/description 추출
inspections.plugin.xml.i18n.inspection.tag.family.name=i18n displayName 추출
inspections.plugin.xml.i18n.choose.bundle.4inspections.title=번들 선택
inspections.plugin.xml.i18n.key=국제화용 키 추출

line.marker.related.property.title=관련 프로퍼티
line.marker.related.property.description=관련 프로퍼티

action.DevKit.EditThemeEditorColorScheme.text=에디터 색상 구성표 편집
action.DevKit.RollbackTheme.text=테마 미리보기 중지
action.DevKit.ApplyTheme.text=테마 미리보기
action.DevKit.OpenThemeReferenceDocs.text=UI 테마 참조 문서 열기
action.AnalyzeEPUsageIgnoreSafeClasses.text=EP 사용 위치 분석(안전 유형을 따르지 않음)
action.AnalyzeEPUsage.text=EP 사용 위치 분석
action.AnalyzeUnloadablePlugins.text=로드할 수없는 플러그인 분석
action.DumpCleanTestData.text=데이터 강조 표시--마크업-프리 덤프
action.TestData.Navigate.text=테스트 데이터로 이동
action.ShowHelpPageById.text=ID로 도움말 페이지 표시
action.GenerateDomModel.text=DOM 모델 생성...
action.ShowSerializedXml.text=클래스에 대해 직렬화된 XML 표시
action.ShuffleNamesAction.text=이름 셔플/스크램블/익명화/치환
action.ToggleHighlightingMarkup.text=기대 강조 표시 마크업 전환
group.Internal.DevKit.text=DevKit
action.GenerateExternalization.text=외부화 생성
action.DevKit.NewTheme.text=Look and Feel
action.NewModuleService.text=모듈 서비스
action.NewModuleService.description=새 모듈 서비스 만들기
action.NewProjectService.text=프로젝트 서비스
action.NewProjectService.description=새 프로젝트 서비스 생성
action.NewApplicationService.text=애플리케이션 서비스
action.NewApplicationService.description=새 애플리케이션 서비스 생성
action.NewAction.text=조치
action.NewAction.description=새 액션 생성
group.DevkitNewActions.text=플러그인 DevKit
action.Anonymous.text.choose.color=색상 선택...
inspection.serializable.constructor.message=비 기본 ctor가 @PropertyMapping 어노테이션이 지정되어야 합니다