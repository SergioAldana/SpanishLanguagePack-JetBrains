# Message we display for inspection if user uses custom class type members that do not exist
custom.type.mimic.name={0}\uc5d0 \uae30\ubc18\ud55c \ub3d9\uc801 \ud074\ub798\uc2a4

### Refactoring

refactoring.extract.method.error.interrupted.execution.flow=\uc2e4\ud589 \ud750\ub984\uc774 \uc911\ub2e8\ub420 \uc2dc \ub9ac\ud329\ud1a0\ub9c1\uc744 \uc218\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
refactoring.extract.method.error.star.import=\ucf54\ub4dc \ube14\ub85d \ub0b4\ubd80\uc758 \ubcc4\ud45c import \ubb38\uc73c\ub85c \ub9ac\ud329\ud1a0\ub9c1\uc744 \uc218\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
refactoring.extract.method.error.yield=\ucf54\ub4dc \ube14\ub85d \ub0b4\ubd80\uc758 'yield' \ubb38\uc73c\ub85c \ub9ac\ud329\ud1a0\ub9c1\uc744 \uc218\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.

### Annotators ###
ANN.deleting.none=None \uc0ad\uc81c
ANN.assign.to.none=None\uc73c\ub85c \ud560\ub2f9
ANN.cant.assign.to.call=\ud568\uc218 \ud638\ucd9c\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.delete.call=\ud568\uc218 \ud638\ucd9c\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.aug.assign.to.generator=\uc0dd\uc131\uae30 \ud45c\ud604\uc2dd\uc5d0 \uc99d\uac15 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.aug.assign.to.tuple.or.generator=\ud29c\ud50c \ub9ac\ud130\ub7f4 \ub610\ub294 \uc0dd\uc131\uae30 \ud45c\ud604\uc2dd\uc5d0 \uc99d\uac15 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.generator=\uc0dd\uc131\uae30 \ud45c\ud604\uc2dd\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.operator=\uc5f0\uc0b0\uc790\uc5d0\uac8c \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.parens=() \uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.aug.assign.to.list.or.comprh=\ub9ac\uc2a4\ud2b8 \ub9ac\ud130\ub7f4 \ub610\ub294 \ub0b4\ud3ec\uc5d0 \uc99d\uac15 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.comprh=\ub9ac\uc2a4\ud2b8 \ub0b4\ud3ec\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.dict.comprh=dict \ub0b4\ud3ec\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.set.comprh=\uc9d1\ud569 \ub0b4\ud3ec\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.aug.assign.to.comprh=\ub9ac\uc2a4\ud2b8 \ub0b4\ud3ec\uc5d0 \uc99d\uac15 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.aug.assign.to.dict.comprh=dict \ub0b4\ud3ec\uc5d0 \uc99d\uac15 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.aug.assign.to.set.comprh=\uc9d1\ud569 \ub0b4\ud3ec\uc5d0 \uc99d\uac15 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.literal=\ub9ac\ud130\ub7f4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.delete.literal=\ub9ac\ud130\ub7f4\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
ANN.cant.assign.to.lambda=\ub78c\ub2e4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.

ANN.break.outside.loop=\ub8e8\ud504 \uc678\ubd80\uc758 'break'
ANN.continue.outside.loop=\ub8e8\ud504 \uc678\ubd80\uc758 'continue'

ANN.$0.assigned.before.global.decl=\uc774\ub984 ''{0}'' \uc774(\uac00) \uc804\uc5ed \uc120\uc5b8 \uc804\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4.

ANN.duplicate.param.name=\ub9e4\uac1c \ubcc0\uc218 \uc774\ub984 \uc911\ubcf5
ANN.starred.param.after.kwparam=** \ub9e4\uac1c\ubcc0\uc218 \uc774\ud6c4 * \ub9e4\uac1c\ubcc0\uc218
ANN.regular.param.after.vararg=* \ub9e4\uac1c\ubcc0\uc218 \ud6c4 \uc77c\ubc18 \ub9e4\uac1c\ubcc0\uc218
ANN.regular.param.after.keyword=** \ub9e4\uac1c\ubcc0\uc218 \ud6c4 \uc77c\ubc18 \ub9e4\uac1c\ubcc0\uc218
ANN.non.default.param.after.default=\ub514\ud3f4\ud2b8 \uac12\uc774 \uc544\ub2cc \ub9e4\uac1c\ubcc0\uc218\uac00 \ub514\ud3f4\ud2b8 \ub9e4\uac1c\ubcc0\uc218 \ub4a4\uc5d0 \uc635\ub2c8\ub2e4.
ANN.named.parameters.after.star=\uc774\ub984\uc774 \uc9c0\uc815\ub41c \ub9e4\uac1c\ubcc0\uc218\uac00 bare * \ub4a4\uc5d0 \uc640\uc57c \ud569\ub2c8\ub2e4.
ANN.named.parameters.before.slash=\uc774\ub984\uc774 \uc9c0\uc815\ub41c \ub9e4\uac1c\ubcc0\uc218\uac00 bare / \uc55e\uc5d0 \uc640\uc57c \ud569\ub2c8\ub2e4.
ANN.tuple.py3=Python 3\uc5d0\uc11c \ud29c\ud50c \ub9e4\uac1c\ubcc0\uc218 \ud480\uae30\uac00 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
ANN.multiple.args=\uc5ec\ub7ec * \ub9e4\uac1c\ubcc0\uc218\uac00 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
ANN.multiple.kwargs=\uc5ec\ub7ec ** \ub9e4\uac1c\ubcc0\uc218\uac00 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
ANN.multiple.slash=\uc5ec\ub7ec / \ub9e4\uac1c\ubcc0\uc218\uac00 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
ANN.slash.param.after.vararg=/ \ub9e4\uac1c\ubcc0\uc218\uac00 * \ub9e4\uac1c\ubcc0\uc218 \uc55e\uc5d0 \uc640\uc57c \ud569\ub2c8\ub2e4.
ANN.slash.param.after.keyword=/ \ub9e4\uac1c\ubcc0\uc218\uac00 ** \ub9e4\uac1c\ubcc0\uc218 \uc55e\uc5d0 \uc640\uc57c \ud569\ub2c8\ub2e4.

ANN.star.import.at.top.only='import *'\ub294 \ubaa8\ub4c8 \ub808\ubca8\uc5d0\uc11c\ub9cc \ud5c8\uc6a9\ub429\ub2c8\ub2e4.

ANN.missing.closing.quote=\ub2eb\ub294 \ub530\uc634\ud45c [{0}] \ub204\ub77d
ANN.missing.closing.triple.quotes=\ub2eb\ub294 \uc0bc\uc911 \ub530\uc634\ud45c \ub204\ub77d

ANN.method.$0.removed.use.$1=\uba54\uc18c\ub4dc ''{0}'' \uc774(\uac00) \uc81c\uac70\ub418\uc5c8\uc73c\ubbc0\ub85c, \ub300\uc2e0 ''{1}''\uc744(\ub97c) \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.
ANN.method.$0.removed=\uba54\uc18c\ub4dc ''{0}'' \uc774(\uac00) \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4.

### parsing
PARSE.expected.expression=\ud45c\ud604\uc2dd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.rbracket=']' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.expr.or.comma.or.bracket=\ud45c\ud604\uc2dd, ',' \ub610\ub294 ']' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.in='in' \uc774 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.for.or.bracket=']' \ub610\ub294 'for' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.comma=',' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.colon='\:' \uc774 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.rpar=')' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.lpar='(' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.rbrace='}' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.tick='`'(backtick) \uc774 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.name=\uc774\ub984\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.colon.or.rbracket='\:' \ub610\ub294 ']' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.comma.or.rpar=',' \ub610\ub294 ')' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.else='else' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4

PARSE.expected.identifier=\uc2dd\ubcc4\uc790\uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.comma.lpar.rpar=',' \ub610\ub294 '(' \ub610\ub294 ')' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.statement.break=break \ubb38\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.@.or.def='@' \ub610\ub294 'def' \uc774(\uac00) \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.expected.formal.param.name=\ud615\uc2dd \ub9e4\uac1c\ubcc0\uc218 \uc774\ub984 \uae30\ub300
PARSE.0.expected={0} \uae30\ub300
PARSE.expected.ellipsis='...' \uc608\uc0c1

statement.expected.found.0=\uba85\ub839\ubb38 \uae30\ub300, {0} \ubc1c\uacac
unexpected.indent=\uc608\uae30\uce58 \uc54a\uc740 \ub4e4\uc5ec\uc4f0\uae30
unindent.does.not.match.any.outer.indent=\ub4e4\uc5ec\uc4f0\uae30 \uc2e4\ud589 \ucde8\uc18c\uac00 \ub2e4\ub978 \uc678\ubd80 \ub4e4\uc5ec\uc4f0\uae30 \ub808\ubca8\uacfc \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
except.or.finally.expected='except' \ub610\ub294 'finally' \uae30\ub300
expected.statement=\ \uad6c\ubb38\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
dedent.expected=\ub0b4\uc5b4\uc4f0\uae30\uac00 \ud544\uc694\ud569\ub2c8\ub2e4
indent.expected=\ub4e4\uc5ec\uc4f0\uae30\uac00 \ud544\uc694\ud569\ub2c8\ub2e4
indented.block.expected=\ub4e4\uc5ec\uc4f0\uae30\ub41c \ube14\ub85d\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
cannot.assign.to.yield.expression='yield' \uc2dd\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
end.of.statement.expected=\uba85\ub839\ubb38\uc758 \ub05d\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
import.expected='import' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
def.or.with.or.for.expected='def' \ub610\ub294 'with' \ub610\ub294 'for' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
rbracket.or.comma.expected='']'' \ub610\ub294 '''','' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
unexpected.expression.syntax=\uc608\uae30\uce58 \uc54a\uc740 \ud45c\ud604\uc2dd \uad6c\ubb38
tuple.expression.expected=\ud29c\ud50c \ud45c\ud604\uc2dd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
value.expression.expected=\uac12 \ud45c\ud604\uc2dd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4
unexpected.expression.part=\uc608\uae30\uce58 \uc54a\uc740 \ud45c\ud604\uc2dd \ubd80\ubd84
unexpected.f.string.token=\uc608\uae30\uce58 \uc54a\uc740 f \ubb38\uc790\uc5f4 \ud1a0\ud070
can.t.assign.to.await.expression=await \uc2dd\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
for.expected='for' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
rarrow.expected='->' \uac00 \ud544\uc694\ud569\ub2c8\ub2e4
unexpected.tokens=\uc608\uae30\uce58 \uc54a\uc740 \ud1a0\ud070

PARSE.function.type.annotations.py2=Python 2\uc5d0\uc11c \uc720\ud615 \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
PARSE.function.return.type.annotations.py2=Python 2\uc5d0\uc11c \ubc18\ud658 \uc720\ud615 \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.

PARSE.console.multiline.magic.warn=\uc5ec\ub7ec \uc904 \ub9e4\uc9c1\uc744 \ud45c\ud604\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
PARSE.console.identifier.expected=\uc2dd\ubcc4\uc790\uac00 \ud544\uc694\ud569\ub2c8\ub2e4
PARSE.console.help.request.warn=\ub3c4\uc6c0 \uc694\uccad\uc740 \uc774\ub984 \ub2e4\uc74c\uc5d0 \uc640\uc57c \ud569\ub2c8\ub2e4.

### quick doc generator
QDOC.module.path.unknown=(\ubaa8\ub4c8 \uacbd\ub85c\ub97c \uc54c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4)
QDOC.epydoc.python2.sdk.not.found=\ <a href\='http\://epydoc.sourceforge.net/'> Epydoc</a> docstrings\ub97c \ub80c\ub354\ub9c1\ud558\ub824\uba74 Python 2 SDK\ub97c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.
QDOC.local.sdk.not.found=docstrings\uc744 \ub80c\ub354\ub9c1\ud558\ub824\uba74 \uad6c\uc131\ub41c \ub85c\uceec Python SDK\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.
QDOC.assigned.to=\ub2e4\uc74c\uc5d0 \ud560\ub2f9\ub418\uc5c8\uc2b5\ub2c8\ub2e4\:
QDOC.documentation.is.copied.from=\ubb38\uc11c\uac00 \ub2e4\uc74c\uc5d0\uc11c \ubcf5\uc0ac\ub429\ub2c8\ub2e4\:
QDOC.accessor.kind=\uc811\uadfc\uc790 \uc885\ub958\:
QDOC.raises=\ubc1c\uc0dd\:
QDOC.keyword.args=\ud0a4\uc6cc\ub4dc args\:
QDOC.returns=\ub9ac\ud134\:
QDOC.params=\ub9e4\uac1c\ubcc0\uc218\:

### Formatter
formatter.panel.dict.alignment.do.not.align=\uc815\ub82c\ud558\uc9c0 \uc54a\uc74c
formatter.panel.dict.alignment.align.on.colon=\ucf5c\ub860\uc5d0 \uc815\ub82c
formatter.panel.dict.alignment.align.on.value=\uac12\uc5d0 \uc815\ub82c

QFIX.add.field.to.class=\ \ud074\ub798\uc2a4\uc5d0 \ud544\ub4dc \ucd94\uac00
QFIX.added.constructor.$0.for.field.$1=\uc0c8 \ud544\ub4dc <code>{1}</code>\ub97c \uc218\uc6a9\ud558\uae30 \uc704\ud574<br/>__init__\uc744 \ud074\ub798\uc2a4\uc5d0 <code>{0}</code>\uc5d0\ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. 
QFIX.NAME.remove.parameter=\ub9e4\uac1c\ubcc0\uc218 \uc81c\uac70
QFIX.rename.parameter.to.$0=''{0}''\ub85c \uc774\ub984 \ubc14\uafb8\uae30
QFIX.NAME.add.field.$0.to.class.$1={1} \ud074\ub798\uc2a4\uc5d0 ''{0}''\ud544\ub4dc \ucd94\uac00
QFIX.NAME.remove.statement=\uad6c\ubb38 \uc81c\uac70
QFIX.failed.to.add.field=<br/>\ud544\ub4dc \ucd94\uac00 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4\!<br/><br/>

#PyDefaultArgumentQuickFix
QFIX.default.argument=\ubcc0\uacbd \uac00\ub2a5\ud55c \ub514\ud3f4\ud2b8 \uc778\uc218 \uad50\uccb4

QFIX.redundant.parentheses=\uc911\ubcf5 \ub41c \uad04\ud638 \uc81c\uac70

QFIX.simplify.boolean.expression=\ubd80\uc6b8 \ud45c\ud604\uc2dd \ub2e8\uc21c\ud654
QFIX.simplify.$0=\ubd80\uc6b8 \ud45c\ud604\uc2dd\uc744 ''{0}''\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4

QFIX.chained.comparison=\uccb4\uc778 \ube44\uad50 \uac04\uc18c\ud654

INSP.GROUP.python=Python

# PyUnresolvedReferencesInspection
INSP.NAME.unresolved.refs=\ud574\uacb0\ub418\uc9c0 \uc54a\ub294 \ucc38\uc870
INSP.module.$0.not.found=\ubaa8\ub4c8 ''{0}''\uc744(\ub97c) \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
INSP.unresolved.ref.$0=\ud655\uc778\ub418\uc9c0 \uc54a\uc740 \ucc38\uc870 ''{0}''
INSP.unresolved.ref.$0.for.class.$1=\ud655\uc778\ub418\uc9c0 \uc54a\uc740 ''{1}'' \ud074\ub798\uc2a4 \uc18d\uc131 \ucc38\uc870 ''{0}''
INSP.cannot.find.$0.in.$1=''{1}''\uc5d0\uc11c \ucc38\uc870 ''{0}''\uc744(\ub97c) \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
INSP.unresolved.operator.ref=\ud074\ub798\uc2a4 ''{0}'' \uc774(\uac00) ''{1}''\uc744(\ub97c) \uc815\uc758\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 ''{2}'' \uc5f0\uc0b0\uc790\ub97c \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
python.stub=Python \uc2a4\ud141

# PyRedundantParenthesesInspection
INSP.NAME.redundant.parentheses=\ubd88\ud544\uc694\ud55c \uad04\ud638
INSP.redundant.parens.ignore.empty.lists.of.base.classes=\uae30\ubcf8 \ud074\ub798\uc2a4\uc758 \ube48 \ub9ac\uc2a4\ud2b8 \ubb34\uc2dc
INSP.redundant.parens.ignore.tuples=\ud22c\ud50c \ubb34\uc2dc
INSP.redundant.parens.ignore.argument.of.operator=% \uc5f0\uc0b0\uc790 \uc778\uc218 \ubb34\uc2dc

# PySimplifyBooleanCheckInspection
INSP.NAME.check.can.be.simplified=\ubd80\uc6b8 \ubcc0\uc218 \uac80\uc0ac\ub97c \ub2e8\uc21c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.
INSP.expression.can.be.simplified=\ud45c\ud604\uc2dd\uc744 \ub2e8\uc21c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.
INSP.simplify.boolean.check.ignore.comparison.to.zero=0\uc5d0 \ub300\ud55c \ube44\uad50 \ubb34\uc2dc

# Actions and associated commands
ACT.CMD.use.import=\uac00\uc838\uc628 \ubaa8\ub4c8 \uc0ac\uc6a9
ACT.qualify.with.module=\uac00\uc838\uc628 \ubaa8\ub4c8 \uac80\uc99d
ACT.from.some.module.import=...\uc73c\ub85c\ubd80\ud130 \uac00\uc838\uc624\uae30

### Quick fixes ###
QFIX.auto.import.family=\uac00\uc838\uc624\uae30
QFIX.auto.import.import.this.name=\uc774 \uc774\ub984 \uac00\uc838\uc624\uae30
QFIX.auto.import.import.name=\uac00\uc838\uc624\uae30 ''{0}''

QFIX.local.auto.import.family=\ub85c\uceec\ub85c \uac00\uc838\uc624\uae30
QFIX.local.auto.import.import.locally=\ub85c\uceec\ub85c {0}

python.docstring.file.type=python docstring
python.function.type.annotation.file.type.description=Python PEP-484 \ud568\uc218 \uc720\ud615 \uc8fc\uc11d
# PyUnusedLocalInspection
INSP.NAME.unused=\uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \ub85c\uceec
INSP.unused.locals.parameter.isnot.used=\ub9e4\uac1c\ubcc0\uc218 ''{0}'' \uac12\uc774 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
INSP.unused.locals.local.variable.isnot.used=\uc9c0\uc5ed \ubcc0\uc218 ''{0}'' \uac12\uc774 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
INSP.unused.locals.replace.with.wildcard=_\ub85c \uad50\uccb4 
INSP.unused.locals.local.function.isnot.used=\uc9c0\uc5ed \ud568\uc218 ''{0}'' \uc774(\uac00) \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
INSP.unused.locals.local.class.isnot.used=\uc9c0\uc5ed \ud074\ub798\uc2a4 ''{0}'' \uc774(\uac00) \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.

INSP.unused.locals.ignore.variables.starting.with='_'\ub85c \uc2dc\uc791\ud558\ub294 \ubcc0\uc218 \ubb34\uc2dc
INSP.unused.locals.ignore.range.iteration.variables=\ubc94\uc704 \ubc18\ubcf5 \ubcc0\uc218 \ubb34\uc2dc
INSP.unused.locals.ignore.lambda.parameters=\ub78c\ub2e4 \ub9e4\uac1c\ubcc0\uc218 \ubb34\uc2dc
INSP.unused.locals.ignore.variables.used.in.tuple.unpacking=\ud29c\ud50c \ud480\uae30\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ubcc0\uc218 \ubb34\uc2dc

find.usages.unnamed=<unnamed>
find.usages.keyword.argument=\ud0a4\uc6cc\ub4dc \uc778\uc218
find.usages.variable=\ubcc0\uc218
find.usages.imported.module.alias=\uac00\uc838\uc628 \ubaa8\ub4c8 \ubcc4\uce6d
find.usages.class=\ud074\ub798\uc2a4
find.usages.function=\ud568\uc218
find.usages.method=\uba54\uc18c\ub4dc
find.usages.parameter=\ub9e4\uac1c \ubcc0\uc218

python.find.usages=\uc0ac\uc6a9 \uc704\uce58 \ucc3e\uae30
python.find.usages.base.method.question=\uba54\uc18c\ub4dc {0} \uc774(\uac00) \ud074\ub798\uc2a4 {1} \uba54\uc18c\ub4dc\ub97c \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4.\n\uae30\ubcf8 \uba54\uc18c\ub4dc\uc758 \uc0ac\uc6a9 \uc704\uce58\ub97c \ucc3e\uc73c\uc2dc\uaca0\uc2b5\ub2c8\uae4c?
python.find.usages.usage.in.superclass.list=\uc0c1\uc704 \ud074\ub798\uc2a4 \ubaa9\ub85d \ub0b4 \uc0ac\uc6a9 \uc704\uce58
python.find.usages.usage.in.isinstance=isinstance() \ub0b4 \uc0ac\uc6a9 \uc704\uce58
python.find.usages.untyped.probable.usage=\uc720\ud615\uc774 \uc5c6\ub294 (\uac00\ub2a5\uc131 \uc788\ub294) \uc0ac\uc6a9 \uc704\uce58
python.find.usages.usage.in.import.statement=import \ubb38 \ub0b4 \uc0ac\uc6a9 \uc704\uce58
